ARM GAS  /tmp/ccp7RwJS.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB67:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "can_init.h"
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  /tmp/ccp7RwJS.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/main.c **** void SystemClock_Config(void);
  50:Core/Src/main.c **** static void MX_GPIO_Init(void);
  51:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  56:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /**
  61:Core/Src/main.c ****   * @brief  The application entry point.
  62:Core/Src/main.c ****   * @retval int
  63:Core/Src/main.c ****   */
  64:Core/Src/main.c **** int main(void)
  65:Core/Src/main.c **** {
  66:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  67:Core/Src/main.c ****   CAN_TxMsg.id = 0xFF;
  68:Core/Src/main.c ****   CAN_TxMsg.len = 8;
  69:Core/Src/main.c ****   CAN_TxMsg.format = STANDAR_FORMAT;
  70:Core/Src/main.c ****   CAN_TxMsg.type = DATA_FRAME;
  71:Core/Src/main.c ****   CAN_TxMsg.data[0] = 31;
  72:Core/Src/main.c ****   CAN_TxMsg.data[1] = 31;
  73:Core/Src/main.c ****   CAN_TxMsg.data[2] = 31;
  74:Core/Src/main.c ****   CAN_TxMsg.data[3] = 31;
  75:Core/Src/main.c ****   CAN_TxMsg.data[4] = 31;
  76:Core/Src/main.c ****   CAN_TxMsg.data[5] = 31;
  77:Core/Src/main.c ****   CAN_TxMsg.data[6] = 31;
  78:Core/Src/main.c ****   CAN_TxMsg.data[7] = 31;
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE END 1 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  85:Core/Src/main.c ****   HAL_Init();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  88:Core/Src/main.c ****   
  89:Core/Src/main.c ****   /* USER CODE END Init */
  90:Core/Src/main.c **** 
ARM GAS  /tmp/ccp7RwJS.s 			page 3


  91:Core/Src/main.c ****   /* Configure the system clock */
  92:Core/Src/main.c ****   SystemClock_Config();
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE END SysInit */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* Initialize all configured peripherals */
  99:Core/Src/main.c ****   MX_GPIO_Init();
 100:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 101:Core/Src/main.c ****   clock_enable();
 102:Core/Src/main.c ****   gpio_enable();
 103:Core/Src/main.c ****   can_init();
 104:Core/Src/main.c ****   can_filtre_ayarlama_takay03(33, 0);
 105:Core/Src/main.c ****   can_mesaj_gonderla();
 106:Core/Src/main.c ****   /* USER CODE END 2 */
 107:Core/Src/main.c ****   /* Infinite loop */
 108:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 109:Core/Src/main.c ****   while (1)
 110:Core/Src/main.c ****   {
 111:Core/Src/main.c ****     /* USER CODE END WHILE */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 114:Core/Src/main.c ****     
 115:Core/Src/main.c ****     HAL_Delay(100);
 116:Core/Src/main.c ****     //readMessage();
 117:Core/Src/main.c ****   }
 118:Core/Src/main.c ****   /* USER CODE END 3 */
 119:Core/Src/main.c **** }
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** /**
 122:Core/Src/main.c ****   * @brief System Clock Configuration
 123:Core/Src/main.c ****   * @retval None
 124:Core/Src/main.c ****   */
 125:Core/Src/main.c **** void SystemClock_Config(void)
 126:Core/Src/main.c **** {
 127:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 128:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 131:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 132:Core/Src/main.c ****   */
 133:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 135:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 136:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 140:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 141:Core/Src/main.c ****   {
 142:Core/Src/main.c ****     Error_Handler();
 143:Core/Src/main.c ****   }
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 146:Core/Src/main.c ****   */
 147:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
ARM GAS  /tmp/ccp7RwJS.s 			page 4


 148:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 149:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 150:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 151:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 152:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 155:Core/Src/main.c ****   {
 156:Core/Src/main.c ****     Error_Handler();
 157:Core/Src/main.c ****   }
 158:Core/Src/main.c **** }
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** /**
 161:Core/Src/main.c ****   * @brief GPIO Initialization Function
 162:Core/Src/main.c ****   * @param None
 163:Core/Src/main.c ****   * @retval None
 164:Core/Src/main.c ****   */
 165:Core/Src/main.c **** static void MX_GPIO_Init(void)
 166:Core/Src/main.c **** {
  26              		.loc 1 166 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 82B0     		sub	sp, sp, #8
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
 167:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 168:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 171:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  34              		.loc 1 171 3 view .LVU1
  35              	.LBB4:
  36              		.loc 1 171 3 view .LVU2
  37              		.loc 1 171 3 view .LVU3
  38 0002 0A4B     		ldr	r3, .L3
  39 0004 9A69     		ldr	r2, [r3, #24]
  40 0006 42F02002 		orr	r2, r2, #32
  41 000a 9A61     		str	r2, [r3, #24]
  42              		.loc 1 171 3 view .LVU4
  43 000c 9A69     		ldr	r2, [r3, #24]
  44 000e 02F02002 		and	r2, r2, #32
  45 0012 0092     		str	r2, [sp]
  46              		.loc 1 171 3 view .LVU5
  47 0014 009A     		ldr	r2, [sp]
  48              	.LBE4:
  49              		.loc 1 171 3 view .LVU6
 172:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  50              		.loc 1 172 3 view .LVU7
  51              	.LBB5:
  52              		.loc 1 172 3 view .LVU8
  53              		.loc 1 172 3 view .LVU9
  54 0016 9A69     		ldr	r2, [r3, #24]
  55 0018 42F00402 		orr	r2, r2, #4
  56 001c 9A61     		str	r2, [r3, #24]
  57              		.loc 1 172 3 view .LVU10
ARM GAS  /tmp/ccp7RwJS.s 			page 5


  58 001e 9B69     		ldr	r3, [r3, #24]
  59 0020 03F00403 		and	r3, r3, #4
  60 0024 0193     		str	r3, [sp, #4]
  61              		.loc 1 172 3 view .LVU11
  62 0026 019B     		ldr	r3, [sp, #4]
  63              	.LBE5:
  64              		.loc 1 172 3 view .LVU12
 173:Core/Src/main.c **** 
 174:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 175:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 176:Core/Src/main.c **** }
  65              		.loc 1 176 1 is_stmt 0 view .LVU13
  66 0028 02B0     		add	sp, sp, #8
  67              	.LCFI1:
  68              		.cfi_def_cfa_offset 0
  69              		@ sp needed
  70 002a 7047     		bx	lr
  71              	.L4:
  72              		.align	2
  73              	.L3:
  74 002c 00100240 		.word	1073876992
  75              		.cfi_endproc
  76              	.LFE67:
  78              		.section	.text.Error_Handler,"ax",%progbits
  79              		.align	1
  80              		.global	Error_Handler
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  85              	Error_Handler:
  86              	.LFB68:
 177:Core/Src/main.c **** 
 178:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 179:Core/Src/main.c **** 
 180:Core/Src/main.c **** /* USER CODE END 4 */
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** /**
 183:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 184:Core/Src/main.c ****   * @retval None
 185:Core/Src/main.c ****   */
 186:Core/Src/main.c **** void Error_Handler(void)
 187:Core/Src/main.c **** {
  87              		.loc 1 187 1 is_stmt 1 view -0
  88              		.cfi_startproc
  89              		@ Volatile: function does not return.
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
 188:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 189:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 190:Core/Src/main.c ****   __disable_irq();
  93              		.loc 1 190 3 view .LVU15
  94              	.LBB6:
  95              	.LBI6:
  96              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
ARM GAS  /tmp/ccp7RwJS.s 			page 6


   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
ARM GAS  /tmp/ccp7RwJS.s 			page 7


  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccp7RwJS.s 			page 8


 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  97              		.loc 2 140 27 view .LVU16
  98              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  99              		.loc 2 142 3 view .LVU17
 100              		.syntax unified
 101              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 102 0000 72B6     		cpsid i
 103              	@ 0 "" 2
 104              		.thumb
 105              		.syntax unified
 106              	.L6:
 107              	.LBE7:
 108              	.LBE6:
 191:Core/Src/main.c ****   while (1)
 109              		.loc 1 191 3 view .LVU18
 192:Core/Src/main.c ****   {
 193:Core/Src/main.c ****   }
 110              		.loc 1 193 3 view .LVU19
 191:Core/Src/main.c ****   while (1)
 111              		.loc 1 191 9 view .LVU20
 112 0002 FEE7     		b	.L6
 113              		.cfi_endproc
 114              	.LFE68:
 116              		.section	.text.SystemClock_Config,"ax",%progbits
 117              		.align	1
 118              		.global	SystemClock_Config
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 123              	SystemClock_Config:
 124              	.LFB66:
 126:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
ARM GAS  /tmp/ccp7RwJS.s 			page 9


 125              		.loc 1 126 1 view -0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 64
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129 0000 10B5     		push	{r4, lr}
 130              	.LCFI2:
 131              		.cfi_def_cfa_offset 8
 132              		.cfi_offset 4, -8
 133              		.cfi_offset 14, -4
 134 0002 90B0     		sub	sp, sp, #64
 135              	.LCFI3:
 136              		.cfi_def_cfa_offset 72
 127:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 137              		.loc 1 127 3 view .LVU22
 127:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 138              		.loc 1 127 22 is_stmt 0 view .LVU23
 139 0004 06AC     		add	r4, sp, #24
 140 0006 2822     		movs	r2, #40
 141 0008 0021     		movs	r1, #0
 142 000a 2046     		mov	r0, r4
 143 000c FFF7FEFF 		bl	memset
 144              	.LVL0:
 128:Core/Src/main.c **** 
 145              		.loc 1 128 3 is_stmt 1 view .LVU24
 128:Core/Src/main.c **** 
 146              		.loc 1 128 22 is_stmt 0 view .LVU25
 147 0010 0023     		movs	r3, #0
 148 0012 0193     		str	r3, [sp, #4]
 149 0014 0293     		str	r3, [sp, #8]
 150 0016 0393     		str	r3, [sp, #12]
 151 0018 0493     		str	r3, [sp, #16]
 152 001a 0593     		str	r3, [sp, #20]
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 153              		.loc 1 133 3 is_stmt 1 view .LVU26
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 154              		.loc 1 133 36 is_stmt 0 view .LVU27
 155 001c 0122     		movs	r2, #1
 156 001e 0692     		str	r2, [sp, #24]
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 157              		.loc 1 134 3 is_stmt 1 view .LVU28
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 158              		.loc 1 134 30 is_stmt 0 view .LVU29
 159 0020 4FF48033 		mov	r3, #65536
 160 0024 0793     		str	r3, [sp, #28]
 135:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 161              		.loc 1 135 3 is_stmt 1 view .LVU30
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 162              		.loc 1 136 3 view .LVU31
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 163              		.loc 1 136 30 is_stmt 0 view .LVU32
 164 0026 0A92     		str	r2, [sp, #40]
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 165              		.loc 1 137 3 is_stmt 1 view .LVU33
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 166              		.loc 1 137 34 is_stmt 0 view .LVU34
 167 0028 0222     		movs	r2, #2
 168 002a 0D92     		str	r2, [sp, #52]
ARM GAS  /tmp/ccp7RwJS.s 			page 10


 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 169              		.loc 1 138 3 is_stmt 1 view .LVU35
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 170              		.loc 1 138 35 is_stmt 0 view .LVU36
 171 002c 0E93     		str	r3, [sp, #56]
 139:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 172              		.loc 1 139 3 is_stmt 1 view .LVU37
 139:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 173              		.loc 1 139 32 is_stmt 0 view .LVU38
 174 002e 4FF4E013 		mov	r3, #1835008
 175 0032 0F93     		str	r3, [sp, #60]
 140:Core/Src/main.c ****   {
 176              		.loc 1 140 3 is_stmt 1 view .LVU39
 140:Core/Src/main.c ****   {
 177              		.loc 1 140 7 is_stmt 0 view .LVU40
 178 0034 2046     		mov	r0, r4
 179 0036 FFF7FEFF 		bl	HAL_RCC_OscConfig
 180              	.LVL1:
 140:Core/Src/main.c ****   {
 181              		.loc 1 140 6 discriminator 1 view .LVU41
 182 003a 78B9     		cbnz	r0, .L11
 147:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 183              		.loc 1 147 3 is_stmt 1 view .LVU42
 147:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 184              		.loc 1 147 31 is_stmt 0 view .LVU43
 185 003c 0F23     		movs	r3, #15
 186 003e 0193     		str	r3, [sp, #4]
 149:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 187              		.loc 1 149 3 is_stmt 1 view .LVU44
 149:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 188              		.loc 1 149 34 is_stmt 0 view .LVU45
 189 0040 0221     		movs	r1, #2
 190 0042 0291     		str	r1, [sp, #8]
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 191              		.loc 1 150 3 is_stmt 1 view .LVU46
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 192              		.loc 1 150 35 is_stmt 0 view .LVU47
 193 0044 0023     		movs	r3, #0
 194 0046 0393     		str	r3, [sp, #12]
 151:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 195              		.loc 1 151 3 is_stmt 1 view .LVU48
 151:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 196              		.loc 1 151 36 is_stmt 0 view .LVU49
 197 0048 4FF48062 		mov	r2, #1024
 198 004c 0492     		str	r2, [sp, #16]
 152:Core/Src/main.c **** 
 199              		.loc 1 152 3 is_stmt 1 view .LVU50
 152:Core/Src/main.c **** 
 200              		.loc 1 152 36 is_stmt 0 view .LVU51
 201 004e 0593     		str	r3, [sp, #20]
 154:Core/Src/main.c ****   {
 202              		.loc 1 154 3 is_stmt 1 view .LVU52
 154:Core/Src/main.c ****   {
 203              		.loc 1 154 7 is_stmt 0 view .LVU53
 204 0050 01A8     		add	r0, sp, #4
 205 0052 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 206              	.LVL2:
ARM GAS  /tmp/ccp7RwJS.s 			page 11


 154:Core/Src/main.c ****   {
 207              		.loc 1 154 6 discriminator 1 view .LVU54
 208 0056 18B9     		cbnz	r0, .L12
 158:Core/Src/main.c **** 
 209              		.loc 1 158 1 view .LVU55
 210 0058 10B0     		add	sp, sp, #64
 211              	.LCFI4:
 212              		.cfi_remember_state
 213              		.cfi_def_cfa_offset 8
 214              		@ sp needed
 215 005a 10BD     		pop	{r4, pc}
 216              	.L11:
 217              	.LCFI5:
 218              		.cfi_restore_state
 142:Core/Src/main.c ****   }
 219              		.loc 1 142 5 is_stmt 1 view .LVU56
 220 005c FFF7FEFF 		bl	Error_Handler
 221              	.LVL3:
 222              	.L12:
 156:Core/Src/main.c ****   }
 223              		.loc 1 156 5 view .LVU57
 224 0060 FFF7FEFF 		bl	Error_Handler
 225              	.LVL4:
 226              		.cfi_endproc
 227              	.LFE66:
 229              		.section	.text.main,"ax",%progbits
 230              		.align	1
 231              		.global	main
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 236              	main:
 237              	.LFB65:
  65:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 238              		.loc 1 65 1 view -0
 239              		.cfi_startproc
 240              		@ Volatile: function does not return.
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243 0000 08B5     		push	{r3, lr}
 244              	.LCFI6:
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 3, -8
 247              		.cfi_offset 14, -4
  67:Core/Src/main.c ****   CAN_TxMsg.len = 8;
 248              		.loc 1 67 3 view .LVU59
  67:Core/Src/main.c ****   CAN_TxMsg.len = 8;
 249              		.loc 1 67 16 is_stmt 0 view .LVU60
 250 0002 134B     		ldr	r3, .L16
 251 0004 FF22     		movs	r2, #255
 252 0006 1A60     		str	r2, [r3]
  68:Core/Src/main.c ****   CAN_TxMsg.format = STANDAR_FORMAT;
 253              		.loc 1 68 3 is_stmt 1 view .LVU61
  68:Core/Src/main.c ****   CAN_TxMsg.format = STANDAR_FORMAT;
 254              		.loc 1 68 17 is_stmt 0 view .LVU62
 255 0008 0822     		movs	r2, #8
 256 000a 1A73     		strb	r2, [r3, #12]
ARM GAS  /tmp/ccp7RwJS.s 			page 12


  69:Core/Src/main.c ****   CAN_TxMsg.type = DATA_FRAME;
 257              		.loc 1 69 3 is_stmt 1 view .LVU63
  69:Core/Src/main.c ****   CAN_TxMsg.type = DATA_FRAME;
 258              		.loc 1 69 20 is_stmt 0 view .LVU64
 259 000c 0024     		movs	r4, #0
 260 000e 5C73     		strb	r4, [r3, #13]
  70:Core/Src/main.c ****   CAN_TxMsg.data[0] = 31;
 261              		.loc 1 70 3 is_stmt 1 view .LVU65
  70:Core/Src/main.c ****   CAN_TxMsg.data[0] = 31;
 262              		.loc 1 70 18 is_stmt 0 view .LVU66
 263 0010 9C73     		strb	r4, [r3, #14]
  71:Core/Src/main.c ****   CAN_TxMsg.data[1] = 31;
 264              		.loc 1 71 3 is_stmt 1 view .LVU67
  71:Core/Src/main.c ****   CAN_TxMsg.data[1] = 31;
 265              		.loc 1 71 21 is_stmt 0 view .LVU68
 266 0012 1F22     		movs	r2, #31
 267 0014 1A71     		strb	r2, [r3, #4]
  72:Core/Src/main.c ****   CAN_TxMsg.data[2] = 31;
 268              		.loc 1 72 3 is_stmt 1 view .LVU69
  72:Core/Src/main.c ****   CAN_TxMsg.data[2] = 31;
 269              		.loc 1 72 21 is_stmt 0 view .LVU70
 270 0016 5A71     		strb	r2, [r3, #5]
  73:Core/Src/main.c ****   CAN_TxMsg.data[3] = 31;
 271              		.loc 1 73 3 is_stmt 1 view .LVU71
  73:Core/Src/main.c ****   CAN_TxMsg.data[3] = 31;
 272              		.loc 1 73 21 is_stmt 0 view .LVU72
 273 0018 9A71     		strb	r2, [r3, #6]
  74:Core/Src/main.c ****   CAN_TxMsg.data[4] = 31;
 274              		.loc 1 74 3 is_stmt 1 view .LVU73
  74:Core/Src/main.c ****   CAN_TxMsg.data[4] = 31;
 275              		.loc 1 74 21 is_stmt 0 view .LVU74
 276 001a DA71     		strb	r2, [r3, #7]
  75:Core/Src/main.c ****   CAN_TxMsg.data[5] = 31;
 277              		.loc 1 75 3 is_stmt 1 view .LVU75
  75:Core/Src/main.c ****   CAN_TxMsg.data[5] = 31;
 278              		.loc 1 75 21 is_stmt 0 view .LVU76
 279 001c 1A72     		strb	r2, [r3, #8]
  76:Core/Src/main.c ****   CAN_TxMsg.data[6] = 31;
 280              		.loc 1 76 3 is_stmt 1 view .LVU77
  76:Core/Src/main.c ****   CAN_TxMsg.data[6] = 31;
 281              		.loc 1 76 21 is_stmt 0 view .LVU78
 282 001e 5A72     		strb	r2, [r3, #9]
  77:Core/Src/main.c ****   CAN_TxMsg.data[7] = 31;
 283              		.loc 1 77 3 is_stmt 1 view .LVU79
  77:Core/Src/main.c ****   CAN_TxMsg.data[7] = 31;
 284              		.loc 1 77 21 is_stmt 0 view .LVU80
 285 0020 9A72     		strb	r2, [r3, #10]
  78:Core/Src/main.c **** 
 286              		.loc 1 78 3 is_stmt 1 view .LVU81
  78:Core/Src/main.c **** 
 287              		.loc 1 78 21 is_stmt 0 view .LVU82
 288 0022 DA72     		strb	r2, [r3, #11]
  85:Core/Src/main.c **** 
 289              		.loc 1 85 3 is_stmt 1 view .LVU83
 290 0024 FFF7FEFF 		bl	HAL_Init
 291              	.LVL5:
  92:Core/Src/main.c **** 
ARM GAS  /tmp/ccp7RwJS.s 			page 13


 292              		.loc 1 92 3 view .LVU84
 293 0028 FFF7FEFF 		bl	SystemClock_Config
 294              	.LVL6:
  99:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 295              		.loc 1 99 3 view .LVU85
 296 002c FFF7FEFF 		bl	MX_GPIO_Init
 297              	.LVL7:
 101:Core/Src/main.c ****   gpio_enable();
 298              		.loc 1 101 3 view .LVU86
 299 0030 FFF7FEFF 		bl	clock_enable
 300              	.LVL8:
 102:Core/Src/main.c ****   can_init();
 301              		.loc 1 102 3 view .LVU87
 302 0034 FFF7FEFF 		bl	gpio_enable
 303              	.LVL9:
 103:Core/Src/main.c ****   can_filtre_ayarlama_takay03(33, 0);
 304              		.loc 1 103 3 view .LVU88
 305 0038 FFF7FEFF 		bl	can_init
 306              	.LVL10:
 104:Core/Src/main.c ****   can_mesaj_gonderla();
 307              		.loc 1 104 3 view .LVU89
 308 003c 2146     		mov	r1, r4
 309 003e 2120     		movs	r0, #33
 310 0040 FFF7FEFF 		bl	can_filtre_ayarlama_takay03
 311              	.LVL11:
 105:Core/Src/main.c ****   /* USER CODE END 2 */
 312              		.loc 1 105 3 view .LVU90
 313 0044 FFF7FEFF 		bl	can_mesaj_gonderla
 314              	.LVL12:
 315              	.L14:
 109:Core/Src/main.c ****   {
 316              		.loc 1 109 3 view .LVU91
 115:Core/Src/main.c ****     //readMessage();
 317              		.loc 1 115 5 discriminator 1 view .LVU92
 318 0048 6420     		movs	r0, #100
 319 004a FFF7FEFF 		bl	HAL_Delay
 320              	.LVL13:
 109:Core/Src/main.c ****   {
 321              		.loc 1 109 9 view .LVU93
 322 004e FBE7     		b	.L14
 323              	.L17:
 324              		.align	2
 325              	.L16:
 326 0050 00000000 		.word	CAN_TxMsg
 327              		.cfi_endproc
 328              	.LFE65:
 330              		.text
 331              	.Letext0:
 332              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 333              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 334              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 335              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 336              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 337              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 338              		.file 9 "Core/Inc/can_init.h"
 339              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 340              		.file 11 "<built-in>"
ARM GAS  /tmp/ccp7RwJS.s 			page 14


ARM GAS  /tmp/ccp7RwJS.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccp7RwJS.s:19     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccp7RwJS.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccp7RwJS.s:74     .text.MX_GPIO_Init:0000002c $d
     /tmp/ccp7RwJS.s:79     .text.Error_Handler:00000000 $t
     /tmp/ccp7RwJS.s:85     .text.Error_Handler:00000000 Error_Handler
     /tmp/ccp7RwJS.s:117    .text.SystemClock_Config:00000000 $t
     /tmp/ccp7RwJS.s:123    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccp7RwJS.s:230    .text.main:00000000 $t
     /tmp/ccp7RwJS.s:236    .text.main:00000000 main
     /tmp/ccp7RwJS.s:326    .text.main:00000050 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
clock_enable
gpio_enable
can_init
can_filtre_ayarlama_takay03
can_mesaj_gonderla
HAL_Delay
CAN_TxMsg
